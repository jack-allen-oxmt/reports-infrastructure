{
  "description": "Extract tenant/flags + assetTypes/siteTokens/pages from body & path (safe, split processors).",
  "processors": [
    {
      "script": {
        "lang": "painless",
        "source": "if (ctx.host != null) { def m = (/https?:\\/\\/([^\\.]+)-/.matcher(ctx.host)); if (m.find()) { ctx.tenantId = m.group(1); } } ctx.is_noise = (ctx.user == null || ctx.user == 'UNAUTHENTICATED' || ctx.path == '/health'); ctx.is_interaction = (ctx.path != null) && (ctx.path.contains('/metric/') || ctx.path.contains('/trends/') || ctx.path.contains('/unique-equipment-count/')); if (ctx.assetTypes_event == null) { ctx.assetTypes_event = new ArrayList(); } if (ctx.assetTypes_default == null) { ctx.assetTypes_default = new ArrayList(); } if (ctx.siteTokens_event == null) { ctx.siteTokens_event = new ArrayList(); }"
      }
    },
    {  "script": {  "lang": "painless",
      "source": "Object vb = ctx.v2_body; if (vb instanceof List) { for (def it : (List)vb) { if (it instanceof Map) { def inc = it.get('include'); if (inc instanceof Map) { def st = inc.get('siteToken'); if (st != null) { if (st instanceof List) { for (def p : (List)st) { if (p != null) { String t = p.toString().trim(); if (t.length() > 0) { ctx.siteTokens_event.add(t); } } } } else { String s = st.toString(); int i = 0; while (true) { int j = s.indexOf(',', i); String part = (j >= 0 ? s.substring(i, j) : s.substring(i)); part = part.trim(); if (part.length() > 0) { ctx.siteTokens_event.add(part); } if (j < 0) { break; } i = j + 1; } } } } } } }"
    }},

    {  "script": {  "lang": "painless",
      "source": "boolean isFilterPath = (ctx.path != null && ctx.path.contains('/filters/')); Object vb = ctx.v2_body; if (vb instanceof List) { for (def it : (List)vb) { if (it instanceof Map) { def inc = it.get('include'); if (inc instanceof Map) { def at = inc.get('assetType'); if (at != null) { if (at instanceof List) { for (def p : (List)at) { if (p != null) { String t = p.toString().trim(); if (t.length() > 0) { if (isFilterPath) { ctx.assetTypes_default.add(t); } else { ctx.assetTypes_event.add(t); } } } } } else { String s = at.toString(); int i = 0; while (true) { int j = s.indexOf(',', i); String part = (j >= 0 ? s.substring(i, j) : s.substring(i)); part = part.trim(); if (part.length() > 0) { if (isFilterPath) { ctx.assetTypes_default.add(part); } else { ctx.assetTypes_event.add(part); } } if (j < 0) { break; } i = j + 1; } } } } } } }"
    }},

    {  "script": {  "lang": "painless",
      "source": "Object vb = ctx.v2_body; if (vb instanceof Map) { def inc = ((Map)vb).get('include'); if (inc instanceof Map) { def st = inc.get('siteToken'); if (st != null) { if (st instanceof List) { for (def p : (List)st) { if (p != null) { String t = p.toString().trim(); if (t.length() > 0) { ctx.siteTokens_event.add(t); } } } } else { String s = st.toString(); int i = 0; while (true) { int j = s.indexOf(',', i); String part = (j >= 0 ? s.substring(i, j) : s.substring(i)); part = part.trim(); if (part.length() > 0) { ctx.siteTokens_event.add(part); } if (j < 0) { break; } i = j + 1; } } } } }"
    }},

    {  "script": {  "lang": "painless",
      "source": "boolean isFilterPath = (ctx.path != null && ctx.path.contains('/filters/')); Object vb = ctx.v2_body; if (vb instanceof Map) { def inc = ((Map)vb).get('include'); if (inc instanceof Map) { def at = inc.get('assetType'); if (at != null) { if (at instanceof List) { for (def p : (List)at) { if (p != null) { String t = p.toString().trim(); if (t.length() > 0) { if (isFilterPath) { ctx.assetTypes_default.add(t); } else { ctx.assetTypes_event.add(t); } } } } } else { String s = at.toString(); int i = 0; while (true) { int j = s.indexOf(',', i); String part = (j >= 0 ? s.substring(i, j) : s.substring(i)); part = part.trim(); if (part.length() > 0) { if (isFilterPath) { ctx.assetTypes_default.add(part); } else { ctx.assetTypes_event.add(part); } } if (j < 0) { break; } i = j + 1; } } } } }"
    }},

    { "script": { "lang": "painless",
      "source": "if (ctx.path != null) { def m1 = (/\\/unique-equipment-count\\/([^\\/?#]+)/.matcher(ctx.path)); if (m1.find()) { ctx.assetType_path = m1.group(1); } }"
    }},
    { "script": { "lang": "painless",
      "source": "if (ctx.path != null) { def m2 = (/\\/img\\/sites\\/([A-Za-z0-9_-]+)\\.jpg/.matcher(ctx.path)); if (m2.find()) { ctx.siteToken_path = m2.group(1).toUpperCase(); } }"
    }},
    { "script": { "lang": "painless",
      "source": "if (ctx.path != null) { def m3 = (/\\/im_ws\\/page-beacon\\/([A-Za-z0-9_-]+)/.matcher(ctx.path)); if (m3.find()) { ctx.page_extracted = m3.group(1); } }"
    }},
    { "script": { "lang": "painless",
      "source": "if (ctx.path != null) { if (ctx.path.contains('/auth/login') || ctx.path == '/login' || ctx.path.contains('/oidc/callback')) { ctx.is_login = true; } }"
    }}
  ]
}
